<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>104</x>
      <y>0</y>
      <w>144</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Created by Jake Nilson
Updated 2/21/17
bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>112</y>
      <w>344</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>IntNode
--
- nodeData : int
- nodePointer : IntNode *
--
+ getNodeData() : int
+ getNodePointer() : IntNode *
+ setNodeData(int value) : void
+ setNodePointer(IntNode * next) : void

+ IntNode() : constructor
+ Int Node(int value) : init
+ IntNode(int value4, IntNode * nextNode) : constructor

bg=green
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>536</x>
      <y>128</y>
      <w>256</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
- size : int
- front : intNode *
--
+ IntNodeArray(int size) : constructor
+ setAtIndex(int index, int value) : void
+ getFromIndex(int index) : int
+ getSize() : int
bg=blue
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>104</x>
      <y>360</y>
      <w>368</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
Data Members
-nodeData : type
-nodePointer : Node&lt;Type&gt; *
--
Constructors

+ Node() : constructor
+ Node(Type value) : constructor
+ Node(Type data, Node,Type&gt; * pointer) : constructor

Methods

+ getNodeData() Type
+ getNodePointer() : Node&lt;Type&gt; *
+ setNodeData(Type data) : void
+ setNodePointer(Node&lt;Type&gt; * next) : void

bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>464</x>
      <y>184</y>
      <w>88</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>70.0;10.0;90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>104</x>
      <y>48</y>
      <w>824</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>Typed Sample
--

bg=gray
fg=red
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>528</x>
      <y>360</y>
      <w>400</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;
--
Data Members

- front : Node&lt;Type&gt; *
- size : int
--
Constructors
+ Array() : constructor
+ Array(int size) : constructor

Advanced

+ ~Array&lt;Type&gt;() : destructor
+ Array&lt;Type&gt;(const Array&lt;Type&gt; &amp; toBeCopied) : copy constructor

Methods

+ getSize() : int
+ getFront() const : Node&lt;Type&gt; *

+ setAtIndex(int index, Type value) : void
+ getFromIndex(int index) : Type
bg=#800080</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>464</x>
      <y>472</y>
      <w>80</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>528</x>
      <y>664</y>
      <w>400</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>Model :: List&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt;*
- end : Node&lt;Type&gt;*
--
+ List&lt;Type&gt;() : constructor
+ List&lt;Type&gt;(const List&lt;Tlype&gt; &amp; source) : copy constructor
+ ~List&lt;Type&gt;() : destructor

+ addAtIndex(int index, Type value) : void
+ addFront(Type value) : void
+ addEnd(Type value) : void
+ remove(int index) : Type
+ setAtIndex(int index, Type data) : Type
+ getFromIndex(int index) : Type
+ contains(Type data) : bool
+ getSize() const : int
+ getFront() const : Node&lt;Type&gt; *
+ getEnd() const : Node&lt;Type&gt;*
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>464</x>
      <y>512</y>
      <w>80</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0...n</panel_attributes>
    <additional_attributes>80.0;340.0;50.0;340.0;50.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
